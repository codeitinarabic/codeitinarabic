{"version":3,"sources":["webpack:///./src/components/sidebar.js","webpack:///./src/templates/blog-list-template.js"],"names":["Sidebar","posts","allMarkdownRemark","edges","className","role","type","placeholder","slice","map","post","key","node","id","to","fields","slug","style","textDecoration","fluid","frontmatter","image","childImageSharp","title","defaultProps","siteTitle","BlogList","render","this","props","data","pageContext","currentPage","numPages","isFirst","isLast","prevPage","toString","nextPage","class","dir","Array","from","length","_","i","rel","React","Component","blogListQuery"],"mappings":"y1fAMMA,EAAU,WACd,IA2BMC,EA3BI,OA2BSC,kBAAkBC,MACrC,OACE,6BACE,yBAAKC,UAAU,aACb,wBACEA,UAAU,8CACVC,KAAK,SAFP,SAIQ,uBAAGD,UAAU,mBAErB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,eACb,0BAAMA,UAAU,mBACd,4BAAQA,UAAU,yBAAyBE,KAAK,UAAhD,UAIF,2BACEA,KAAK,OACLF,UAAU,yCACVG,YAAY,mBAMpB,yBAAKH,UAAU,aACb,wBACEA,UAAU,8CACVC,KAAK,SAFP,mBAIkB,uBAAGD,UAAU,mBAE/B,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACZH,EAAMO,MAAM,EAAG,GAAGC,KAAI,SAAAC,GAAI,OACzB,yBAAKC,IAAKD,EAAKE,KAAKC,IAClB,kBAAC,OAAD,CACEC,GAAIJ,EAAKE,KAAKG,OAAOC,KACrBC,MAAO,CAAEC,eAAgB,SAEzB,kBAAC,IAAD,CACEd,UAAU,aACVe,MAAOT,EAAKE,KAAKQ,YAAYC,MAAMC,gBAAgBH,QAErD,yBAAKf,UAAU,kBACb,2BAAIM,EAAKE,KAAKQ,YAAYG,iBAU1C,yBAAKnB,UAAU,aACb,wBAAIA,UAAU,oCAAoCC,KAAK,SAAvD,oBACmB,uBAAGD,UAAU,+BAEhC,yBAAKA,UAAU,aACb,kBAAC,IAAD,UAWVJ,EAAQwB,aAAe,CACrBC,UAAU,IAEGzB,O,sPCxGM0B,E,gLACnBC,OAAA,WACE,IAAM1B,EAAQ2B,KAAKC,MAAMC,KAAK5B,kBAAkBC,MADzC,EAE2ByB,KAAKC,MAAME,YAArCC,EAFD,EAECA,YAAaC,EAFd,EAEcA,SACfC,EAA0B,IAAhBF,EACVG,EAASH,IAAgBC,EACzBG,EACJJ,EAAc,GAAM,EAAI,QAAxB,UAA4CA,EAAc,GAAGK,WACzDC,EAAQ,UAAaN,EAAc,GAAGK,WAE5C,OACE,kBAAC,IAAD,KACE,yBAAKE,MAAM,WAAW1B,GAAG,mBACvB,kBAAC,IAAD,OAEF,yBAAK0B,MAAM,YACT,6BACA,yBAAKA,MAAM,wBAAwBlC,KAAK,SACtC,wBAAIkC,MAAM,QAAV,iBACgB,uBAAGA,MAAM,uBAG3B,yBAAKA,MAAM,aACT,wBAAIC,IAAI,OACLvC,EAAMQ,KAAI,YAAe,IAAZG,EAAW,EAAXA,KACNW,EAAQX,EAAKQ,YAAYG,OAASX,EAAKG,OAAOC,KACpD,OACE,kBAAC,OAAD,CACEF,GAAIF,EAAKG,OAAOC,KAChBuB,MAAM,gCACN5B,IAAKC,EAAKG,OAAOC,MAEjB,uBAAGuB,MAAM,qBALX,IAKmC,2BAAIhB,GACrC,kCAKR,6BACA,6BACE,uBAAGiB,IAAI,OAAP,WACU,uBAAGD,MAAM,gBADnB,KACwC,IACrCE,MAAMC,KAAK,CAAEC,OAAQV,IAAY,SAACW,EAAGC,GAAJ,OAChC,kBAAC,OAAD,CACElC,IAAG,qBAAsBkC,EAAI,GAC7B/B,GAAE,UAAiB,IAAN+B,EAAU,GAAKA,EAAI,IAEhC,0BAAMN,MAAM,uBAAZ,IAAoCM,EAAI,EAAxC,KAAmD,SAIzD,8BAEF,iCACIV,GACA,kBAAC,OAAD,CAAMrB,GAAIwB,EAAUC,MAAM,2BAA2BO,IAAI,QACvD,uBAAGP,MAAM,oBADX,mBAID,MACCL,GACA,kBAAC,OAAD,CAAMpB,GAAIsB,EAAUG,MAAM,2BAA2BO,IAAI,QAAzD,kBACiB,uBAAGP,MAAM,sBAKhC,yBAAK1B,GAAG,kBACN,yBAAK0B,MAAM,kCAAX,oBACA,kBAAC,IAAD,OAEF,gC,GAvE4BQ,IAAMC,WA8E/BC,EAAa","file":"component---src-templates-blog-list-template-js-4bace90ea98e9b5e1233.js","sourcesContent":["import PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport MailList from \"./maillist\"\r\nimport { Link, graphql, useStaticQuery } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\n\r\nconst Sidebar = () => {\r\n  const data = useStaticQuery(graphql`\r\n    {\r\n      allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\r\n        edges {\r\n          node {\r\n            id\r\n            fields {\r\n              slug\r\n            }\r\n            frontmatter {\r\n              tags\r\n              title\r\n              date\r\n              category\r\n              image {\r\n                childImageSharp {\r\n                  fluid(maxWidth: 250, maxHeight: 130) {\r\n                    ...GatsbyImageSharpFluid\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n  const posts = data.allMarkdownRemark.edges\r\n  return (\r\n    <div>\r\n      <div className=\"card my-4\">\r\n        <h5\r\n          className=\"card-header alert alert-secondary text-dark\"\r\n          role=\"alert\"\r\n        >\r\n          البحث <i className=\"fas fa-search\"></i>\r\n        </h5>\r\n        <div className=\"card-body\">\r\n          <div className=\"input-group\">\r\n            <span className=\"input-group-btn\">\r\n              <button className=\"btn btn-success btn-sm\" type=\"button\">\r\n                إذهب!\r\n              </button>\r\n            </span>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control text-left form-control-sm\"\r\n              placeholder=\"... أبحن عن\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"card my-4\">\r\n        <h5\r\n          className=\"card-header alert alert-secondary text-dark\"\r\n          role=\"alert\"\r\n        >\r\n          موضوعات قد تهمك <i className=\"fas fa-server\"></i>\r\n        </h5>\r\n        <div className=\"card-body\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              {posts.slice(5, 7).map(post => (\r\n                <div key={post.node.id}>\r\n                  <Link\r\n                    to={post.node.fields.slug}\r\n                    style={{ textDecoration: \"none\" }}\r\n                  >\r\n                    <Img\r\n                      className=\"articleimg\"\r\n                      fluid={post.node.frontmatter.image.childImageSharp.fluid}\r\n                    />\r\n                    <div className=\"text-secondary\">\r\n                      <b>{post.node.frontmatter.title}</b>\r\n                    </div>\r\n                  </Link>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"card my-4\">\r\n        <h5 className=\"card-header alert alert-secondary\" role=\"alert\">\r\n          قائمتنا البريدية <i className=\"fas fa-envelope-open-text\"></i>\r\n        </h5>\r\n        <div className=\"card-body\">\r\n          <MailList />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nSidebar.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nSidebar.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\nexport default Sidebar\r\n","import React from \"react\"\r\nimport { graphql, Link } from \"gatsby\"\r\nimport Layout from \"../components/layout\"\r\nimport Sidebar from \"../components/sidebar\"\r\nimport MailList from \"../components/maillist\"\r\n\r\nexport default class BlogList extends React.Component {\r\n  render() {\r\n    const posts = this.props.data.allMarkdownRemark.edges\r\n    const { currentPage, numPages } = this.props.pageContext\r\n    const isFirst = currentPage === 1\r\n    const isLast = currentPage === numPages\r\n    const prevPage =\r\n      currentPage - 1 === 1 ? \"/blog\" : `/blog/${(currentPage - 1).toString()}`\r\n    const nextPage = `/blog/${(currentPage + 1).toString()}`\r\n\r\n    return (\r\n      <Layout>\r\n        <div class=\"col-md-4\" id=\"content-desktop\">\r\n          <Sidebar />\r\n        </div>\r\n        <div class=\"col-md-8\">\r\n          <br />\r\n          <div class=\"alert alert-secondary\" role=\"alert\">\r\n            <h4 class=\"my-1\">\r\n              جميع المقالات <i class=\"fa fa-tags fa-sm\"></i>\r\n            </h4>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <ul dir=\"rtl\">\r\n              {posts.map(({ node }) => {\r\n                const title = node.frontmatter.title || node.fields.slug\r\n                return (\r\n                  <Link\r\n                    to={node.fields.slug}\r\n                    class=\"stretched-link text-secondary\"\r\n                    key={node.fields.slug}\r\n                  >\r\n                    <i class=\"fa fa-tags fa-sm\"></i> <b>{title}</b>\r\n                    <hr />\r\n                  </Link>\r\n                )\r\n              })}\r\n            </ul>\r\n            <hr />\r\n            <div>\r\n              <b dir=\"rtl\">\r\n                الصفحات <i class=\"far fa-file\"></i> :{\" \"}\r\n                {Array.from({ length: numPages }, (_, i) => (\r\n                  <Link\r\n                    key={`pagination-number${i + 1}`}\r\n                    to={`/blog/${i === 0 ? \"\" : i + 1}`}\r\n                  >\r\n                    <span class=\"badge badge-warning\"> {i + 1} </span>{\" \"}\r\n                  </Link>\r\n                ))}\r\n              </b>\r\n              <hr />\r\n            </div>\r\n            <center>\r\n              {!isLast && (\r\n                <Link to={nextPage} class=\"btn btn-secondary btn-sm\" rel=\"next\">\r\n                  <i class=\"fas fa-backward\"></i> الصفحة التاليه\r\n                </Link>\r\n              )}\r\n              {\"  \"}\r\n              {!isFirst && (\r\n                <Link to={prevPage} class=\"btn btn-secondary btn-sm\" rel=\"prev\">\r\n                  الصفحة السابقه <i class=\"fas fa-forward\"></i>\r\n                </Link>\r\n              )}\r\n            </center>\r\n          </div>\r\n          <div id=\"content-mobile\">\r\n            <div class=\"p-3 mb-2 bg-success text-white\">القائمة البريدية</div>\r\n            <MailList />\r\n          </div>\r\n          <hr />\r\n        </div>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport const blogListQuery = graphql`\r\n  query blogListQuery($skip: Int!, $limit: Int!) {\r\n    allMarkdownRemark(\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      limit: $limit\r\n      skip: $skip\r\n    ) {\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n          }\r\n          excerpt\r\n          frontmatter {\r\n            date(formatString: \"DD MMMM, YYYY\")\r\n            title\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}