{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/sidebar.js","webpack:///./src/components/seo.js"],"names":["pageQuery","IndexPage","data","title","className","id","role","allMarkdownRemark","edges","map","post","key","node","to","fields","slug","fluid","frontmatter","image","childImageSharp","dir","excerpt","tags","tag","kebabCase","date","Sidebar","posts","type","placeholder","slice","style","textDecoration","defaultProps","siteTitle","SEO","description","lang","meta","site","metaDescription","siteMetadata","htmlAttributes","titleTemplate","name","content","property","author","concat"],"mappings":"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","file":"component---src-pages-index-js-9be8c78bf746a737d400.js","sourcesContent":["// Core Stuff\r\nimport React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\n// Components\r\nimport SEO from \"../components/seo\"\r\nimport Layout from \"../components/layout\"\r\nimport Sidebar from \"../components/sidebar\"\r\n// Utility\r\nimport kebabCase from \"lodash/kebabCase\"\r\n\r\nconst IndexPage = ({ data }) => (\r\n  <Layout>\r\n    <SEO title=\"Home\" />\r\n    <div className=\"col-md-4\" id=\"content-desktop\">\r\n      <Sidebar />\r\n    </div>\r\n    <div className=\"col-md-8\">\r\n      <br />\r\n      <div className=\"alert alert-secondary\" role=\"alert\">\r\n        <h4 className=\"my-1 text-secondary\">\r\n          أحدث المواضيع <i className=\"fas fa-blog\"></i>\r\n        </h4>\r\n      </div>\r\n      {data.allMarkdownRemark.edges.map(post => (\r\n        <div key={post.node.id} className=\"card mb-4\">\r\n          <Link to={post.node.fields.slug}>\r\n            <Img\r\n              className=\"card-img-top\"\r\n              fluid={post.node.frontmatter.image.childImageSharp.fluid}\r\n            />\r\n          </Link>\r\n          <div className=\"card-body\">\r\n            <Link to={post.node.fields.slug} className=\"text-dark nounderline\">\r\n              <h3 dir=\"auto\" className=\"card-title\">\r\n                {/* add padge say \"new\" - you can use if statement to let it be in\r\n              only the latest post*/}\r\n                <i className=\"fas fa-book\"></i> {post.node.frontmatter.title}\r\n              </h3>\r\n            </Link>\r\n            <p dir=\"rtl\" className=\"card-text text-secondary\">\r\n              {post.node.excerpt}\r\n              <Link\r\n                to={post.node.fields.slug}\r\n                className=\"btn btn-secondary btn-sm\"\r\n              >\r\n                <i className=\"far fa-paper-plane\"></i> أقرأ المزيـد\r\n              </Link>\r\n            </p>\r\n\r\n            <ul>\r\n              {post.node.frontmatter.tags.map(tag => (\r\n                <Link key={tag} to={`/tags/${kebabCase(tag)}`}>\r\n                  {\" \"}\r\n                  <span className=\"badge badge-warning\">{tag}</span>\r\n                </Link>\r\n              ))}{\" \"}\r\n              : <i className=\"fa fa-tags fa-sm\"></i> الوســوم\r\n              <br />\r\n              تم نشره في <i className=\"far fa-calendar-alt\"></i> :{\" \"}\r\n              {post.node.frontmatter.date}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  </Layout>\r\n)\r\nexport const pageQuery = graphql`\r\n  query BlogIndexQuery {\r\n    allMarkdownRemark(sort: { fields: frontmatter___date, order: DESC }) {\r\n      edges {\r\n        node {\r\n          id\r\n          fields {\r\n            slug\r\n          }\r\n          excerpt(pruneLength: 200, truncate: true, format: PLAIN)\r\n\r\n          frontmatter {\r\n            title\r\n            date\r\n            author\r\n            tags\r\n            image {\r\n              childImageSharp {\r\n                fluid(maxWidth: 750, maxHeight: 300) {\r\n                  ...GatsbyImageSharpFluid\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default IndexPage\r\n","import PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport MailList from \"./maillist\"\r\nimport { Link, graphql, useStaticQuery } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\n\r\nconst Sidebar = () => {\r\n  const data = useStaticQuery(graphql`\r\n    {\r\n      allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\r\n        edges {\r\n          node {\r\n            id\r\n            fields {\r\n              slug\r\n            }\r\n            frontmatter {\r\n              tags\r\n              title\r\n              date\r\n              category\r\n              image {\r\n                childImageSharp {\r\n                  fluid(maxWidth: 250, maxHeight: 130) {\r\n                    ...GatsbyImageSharpFluid\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n  const posts = data.allMarkdownRemark.edges\r\n  return (\r\n    <div>\r\n      <div className=\"card my-4\">\r\n        <h5\r\n          className=\"card-header alert alert-secondary text-dark\"\r\n          role=\"alert\"\r\n        >\r\n          البحث <i className=\"fas fa-search\"></i>\r\n        </h5>\r\n        <div className=\"card-body\">\r\n          <div className=\"input-group\">\r\n            <span className=\"input-group-btn\">\r\n              <button className=\"btn btn-success btn-sm\" type=\"button\">\r\n                إذهب!\r\n              </button>\r\n            </span>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control text-left form-control-sm\"\r\n              placeholder=\"... أبحن عن\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"card my-4\">\r\n        <h5\r\n          className=\"card-header alert alert-secondary text-dark\"\r\n          role=\"alert\"\r\n        >\r\n          موضوعات قد تهمك <i className=\"fas fa-server\"></i>\r\n        </h5>\r\n        <div className=\"card-body\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              {posts.slice(5, 7).map(post => (\r\n                <div key={post.node.id}>\r\n                  <Link\r\n                    to={post.node.fields.slug}\r\n                    style={{ textDecoration: \"none\" }}\r\n                  >\r\n                    <Img\r\n                      className=\"articleimg\"\r\n                      fluid={post.node.frontmatter.image.childImageSharp.fluid}\r\n                    />\r\n                    <div className=\"text-secondary\">\r\n                      <b>{post.node.frontmatter.title}</b>\r\n                    </div>\r\n                  </Link>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"card my-4\">\r\n        <h5 className=\"card-header alert alert-secondary\" role=\"alert\">\r\n          قائمتنا البريدية <i className=\"fas fa-envelope-open-text\"></i>\r\n        </h5>\r\n        <div className=\"card-body\">\r\n          <MailList />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nSidebar.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nSidebar.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\nexport default Sidebar\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n"],"sourceRoot":""}