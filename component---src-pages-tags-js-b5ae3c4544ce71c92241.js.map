{"version":3,"sources":["webpack:///./src/pages/tags.js","webpack:///./src/components/sidebar.js"],"names":["TagsPage","data","group","allMarkdownRemark","title","site","siteMetadata","className","id","role","dir","map","tag","key","fieldValue","to","kebabCase","totalCount","pageQuery","Sidebar","posts","edges","type","placeholder","slice","post","node","fields","slug","style","textDecoration","fluid","frontmatter","image","childImageSharp","defaultProps","siteTitle"],"mappings":"mifAAA,2JA8EeA,UAjEE,SAAC,GAAD,QACfC,KACuBC,EAFR,EAEbC,kBAAqBD,MAEHE,EAJL,EAGbC,KACEC,aAAgBF,MAJL,OAQf,kBAAC,IAAD,KACE,kBAAC,SAAD,CAAQA,MAAOA,IACf,yBAAKG,UAAU,WAAWC,GAAG,mBAC3B,kBAAC,IAAD,OAEF,yBAAKD,UAAU,YACb,6BACA,yBAAKA,UAAU,sBAAsBE,KAAK,SACxC,wBAAIF,UAAU,QAAd,iBACgB,uBAAGA,UAAU,uBAG/B,yBAAKA,UAAU,aACb,wBAAIG,IAAI,OACLR,EAAMS,KAAI,SAAAC,GAAG,OACZ,wBAAIC,IAAKD,EAAIE,WAAYP,UAAU,aACjC,kBAAC,OAAD,CACEQ,GAAE,SAAWC,IAAUJ,EAAIE,YAAzB,IACFP,UAAU,iCAEV,2BACE,uBAAGA,UAAU,qBADf,IACwCK,EAAIE,WACzC,KACD,0BAAMP,UAAU,uBAAuBK,EAAIK,oBAOvD,yBAAKT,GAAG,kBACN,yBAAKD,UAAU,kCAAf,oBACA,kBAAC,IAAD,OAEF,gCAyBC,IAAMW,EAAS,c,oHC1EhBC,EAAU,WACd,IA2BMC,EA3BI,OA2BSjB,kBAAkBkB,MACrC,OACE,6BACE,yBAAKd,UAAU,aACb,wBACEA,UAAU,8CACVE,KAAK,SAFP,SAIQ,uBAAGF,UAAU,mBAErB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,eACb,0BAAMA,UAAU,mBACd,4BAAQA,UAAU,yBAAyBe,KAAK,UAAhD,UAIF,2BACEA,KAAK,OACLf,UAAU,yCACVgB,YAAY,mBAMpB,yBAAKhB,UAAU,aACb,wBACEA,UAAU,8CACVE,KAAK,SAFP,mBAIkB,uBAAGF,UAAU,mBAE/B,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACZa,EAAMI,MAAM,EAAG,GAAGb,KAAI,SAAAc,GAAI,OACzB,yBAAKZ,IAAKY,EAAKC,KAAKlB,IAClB,kBAAC,OAAD,CACEO,GAAIU,EAAKC,KAAKC,OAAOC,KACrBC,MAAO,CAAEC,eAAgB,SAEzB,kBAAC,IAAD,CACEvB,UAAU,aACVwB,MAAON,EAAKC,KAAKM,YAAYC,MAAMC,gBAAgBH,QAErD,yBAAKxB,UAAU,kBACb,2BAAIkB,EAAKC,KAAKM,YAAY5B,iBAU1C,yBAAKG,UAAU,aACb,wBAAIA,UAAU,oCAAoCE,KAAK,SAAvD,oBACmB,uBAAGF,UAAU,+BAEhC,yBAAKA,UAAU,aACb,kBAAC,IAAD,UAWVY,EAAQgB,aAAe,CACrBC,UAAU,IAEGjB","file":"component---src-pages-tags-js-b5ae3c4544ce71c92241.js","sourcesContent":["import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { Helmet } from \"react-helmet\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\n// Utilities\r\nimport kebabCase from \"lodash/kebabCase\"\r\n\r\n// Components\r\nimport Layout from \"../components/layout\"\r\nimport Sidebar from \"../components/sidebar\"\r\nimport MailList from \"../components/maillist\"\r\n\r\nconst TagsPage = ({\r\n  data: {\r\n    allMarkdownRemark: { group },\r\n    site: {\r\n      siteMetadata: { title },\r\n    },\r\n  },\r\n}) => (\r\n  <Layout>\r\n    <Helmet title={title} />\r\n    <div className=\"col-md-4\" id=\"content-desktop\">\r\n      <Sidebar />\r\n    </div>\r\n    <div className=\"col-md-8\">\r\n      <br />\r\n      <div className=\"alert alert-warning\" role=\"alert\">\r\n        <h4 className=\"my-1\">\r\n          جميع الوســوم <i className=\"fa fa-tags fa-sm\"></i>\r\n        </h4>\r\n      </div>\r\n      <div className=\"card-body\">\r\n        <ul dir=\"rtl\">\r\n          {group.map(tag => (\r\n            <li key={tag.fieldValue} className=\"card mb-4\">\r\n              <Link\r\n                to={`/tags/${kebabCase(tag.fieldValue)}/`}\r\n                className=\"stretched-link text-secondary\"\r\n              >\r\n                <b>\r\n                  <i className=\"fa fa-tags fa-sm\"></i> {tag.fieldValue}\r\n                  {\"  \"}\r\n                  <span className=\"badge badge-warning\">{tag.totalCount}</span>\r\n                </b>\r\n              </Link>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <div id=\"content-mobile\">\r\n        <div className=\"p-3 mb-2 bg-success text-white\">القائمة البريدية</div>\r\n        <MailList />\r\n      </div>\r\n      <hr />\r\n    </div>\r\n  </Layout>\r\n)\r\n\r\nTagsPage.propTypes = {\r\n  data: PropTypes.shape({\r\n    allMarkdownRemark: PropTypes.shape({\r\n      group: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          fieldValue: PropTypes.string.isRequired,\r\n          totalCount: PropTypes.number.isRequired,\r\n        }).isRequired\r\n      ),\r\n    }),\r\n    site: PropTypes.shape({\r\n      siteMetadata: PropTypes.shape({\r\n        title: PropTypes.string.isRequired,\r\n      }),\r\n    }),\r\n  }),\r\n}\r\n\r\nexport default TagsPage\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(limit: 2000) {\r\n      group(field: frontmatter___tags) {\r\n        fieldValue\r\n        totalCount\r\n      }\r\n    }\r\n  }\r\n`\r\n","import PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport MailList from \"./maillist\"\r\nimport { Link, graphql, useStaticQuery } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\n\r\nconst Sidebar = () => {\r\n  const data = useStaticQuery(graphql`\r\n    {\r\n      allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\r\n        edges {\r\n          node {\r\n            id\r\n            fields {\r\n              slug\r\n            }\r\n            frontmatter {\r\n              tags\r\n              title\r\n              date\r\n              category\r\n              image {\r\n                childImageSharp {\r\n                  fluid(maxWidth: 250, maxHeight: 130) {\r\n                    ...GatsbyImageSharpFluid\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n  const posts = data.allMarkdownRemark.edges\r\n  return (\r\n    <div>\r\n      <div className=\"card my-4\">\r\n        <h5\r\n          className=\"card-header alert alert-secondary text-dark\"\r\n          role=\"alert\"\r\n        >\r\n          البحث <i className=\"fas fa-search\"></i>\r\n        </h5>\r\n        <div className=\"card-body\">\r\n          <div className=\"input-group\">\r\n            <span className=\"input-group-btn\">\r\n              <button className=\"btn btn-success btn-sm\" type=\"button\">\r\n                إذهب!\r\n              </button>\r\n            </span>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control text-left form-control-sm\"\r\n              placeholder=\"... أبحن عن\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"card my-4\">\r\n        <h5\r\n          className=\"card-header alert alert-secondary text-dark\"\r\n          role=\"alert\"\r\n        >\r\n          موضوعات قد تهمك <i className=\"fas fa-server\"></i>\r\n        </h5>\r\n        <div className=\"card-body\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              {posts.slice(5, 7).map(post => (\r\n                <div key={post.node.id}>\r\n                  <Link\r\n                    to={post.node.fields.slug}\r\n                    style={{ textDecoration: \"none\" }}\r\n                  >\r\n                    <Img\r\n                      className=\"articleimg\"\r\n                      fluid={post.node.frontmatter.image.childImageSharp.fluid}\r\n                    />\r\n                    <div className=\"text-secondary\">\r\n                      <b>{post.node.frontmatter.title}</b>\r\n                    </div>\r\n                  </Link>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"card my-4\">\r\n        <h5 className=\"card-header alert alert-secondary\" role=\"alert\">\r\n          قائمتنا البريدية <i className=\"fas fa-envelope-open-text\"></i>\r\n        </h5>\r\n        <div className=\"card-body\">\r\n          <MailList />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nSidebar.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nSidebar.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\nexport default Sidebar\r\n"],"sourceRoot":""}