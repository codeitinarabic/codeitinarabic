{"version":3,"sources":["webpack:///./src/templates/tags.js","webpack:///./src/components/sidebar.js"],"names":["Tags","pageContext","data","tag","allMarkdownRemark","edges","tagHeader","totalCount","class","id","role","dir","map","node","slug","fields","title","frontmatter","key","to","pageQuery","Sidebar","props","posts","type","placeholder","slice","post","style","textDecoration","fluid","image","childImageSharp","defaultProps","siteTitle"],"mappings":"4FAAA,0HAyFeA,UAhFF,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACnBC,EAAQF,EAARE,IAD8B,EAERD,EAAKE,kBAA3BC,EAF8B,EAE9BA,MACFC,EAAS,qBAHuB,EAEvBC,WACA,2BAKXJ,EALW,cAQf,OACE,kBAAC,IAAD,KACE,yBAAKK,MAAM,WAAWC,GAAG,mBACvB,kBAAC,IAAD,OAEF,yBAAKD,MAAM,YACT,6BACA,yBAAKA,MAAM,sBAAsBE,KAAK,SACpC,wBAAIF,MAAM,QACPF,EACD,uBAAGE,MAAM,uBAGb,6BACA,wBAAIG,IAAI,OACLN,EAAMO,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACJC,EAASD,EAAKE,OAAdD,KACAE,EAAUH,EAAKI,YAAfD,MACR,OACE,4BACE,uBAAGE,IAAKJ,GACN,kBAAC,OAAD,CAAMK,GAAIL,EAAMN,MAAM,iCACpB,uBAAGA,MAAM,qBADX,IACoCQ,EADpC,IAEE,oCAOZ,6BACA,kBAAC,OAAD,CAAMG,GAAG,QAAQX,MAAM,0BACrB,uBAAGA,MAAM,iCADX,gBAGA,6BACA,6BACA,yBAAKC,GAAG,kBACN,yBAAKD,MAAM,kCAAX,oBACA,kBAAC,IAAD,OAEF,gCA+BD,IAAMY,EAAS,c,+ycCrFhBC,EAAU,SAAAC,GACd,IA2BMC,EA3BI,OA2BSnB,kBAAkBC,MACrC,OACE,6BACE,yBAAKG,MAAM,aACT,wBAAIA,MAAM,8CAA8CE,KAAK,SAA7D,SACQ,uBAAGF,MAAM,mBAEjB,yBAAKA,MAAM,aACT,yBAAKA,MAAM,eACT,0BAAMA,MAAM,mBACV,4BAAQA,MAAM,yBAAyBgB,KAAK,UAA5C,UAIF,2BACEA,KAAK,OACLhB,MAAM,yCACNiB,YAAY,mBAMpB,yBAAKjB,MAAM,aACT,wBAAIA,MAAM,8CAA8CE,KAAK,SAA7D,mBACkB,uBAAGF,MAAM,mBAE3B,yBAAKA,MAAM,aACT,yBAAKA,MAAM,OACT,yBAAKA,MAAM,aACRe,EAAMG,MAAM,EAAG,GAAGd,KAAI,SAAAe,GAAI,OACzB,yBAAKT,IAAKS,EAAKlB,IACb,kBAAC,OAAD,CACEU,GAAIQ,EAAKd,KAAKE,OAAOD,KACrBc,MAAO,CAAEC,eAAgB,SAEzB,kBAAC,IAAD,CACErB,MAAM,aACNsB,MAAOH,EAAKd,KAAKI,YAAYc,MAAMC,gBAAgBF,QAErD,yBAAKtB,MAAM,kBACT,2BAAImB,EAAKd,KAAKI,YAAYD,iBAU1C,yBAAKR,MAAM,aACT,wBAAIA,MAAM,oCAAoCE,KAAK,SAAnD,oBACmB,uBAAGF,MAAM,+BAE5B,yBAAKA,MAAM,aACT,kBAAC,IAAD,UAWVa,EAAQY,aAAe,CACrBC,UAAU,IAEGb","file":"component---src-templates-tags-js-e6c8728035664951ea8c.js","sourcesContent":["import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\n// Components\r\nimport Layout from \"../components/layout\"\r\nimport Sidebar from \"../components/sidebar\"\r\nimport MailList from \"../components/maillist\"\r\n\r\nconst Tags = ({ pageContext, data }) => {\r\n  const { tag } = pageContext\r\n  const { edges, totalCount } = data.allMarkdownRemark\r\n  const tagHeader = `\r\n  يوجد عدد \r\n ( ${totalCount} )\r\n  مقال عن\r\n:  \r\n    ${tag}\r\n   \r\n    `\r\n  return (\r\n    <Layout>\r\n      <div class=\"col-md-4\" id=\"content-desktop\">\r\n        <Sidebar />\r\n      </div>\r\n      <div class=\"col-md-8\">\r\n        <hr />\r\n        <div class=\"alert alert-warning\" role=\"alert\">\r\n          <h3 class=\"my-1\">\r\n            {tagHeader}\r\n            <i class=\"fa fa-tags fa-sm\"></i>\r\n          </h3>\r\n        </div>\r\n        <br />\r\n        <ul dir=\"rtl\">\r\n          {edges.map(({ node }) => {\r\n            const { slug } = node.fields\r\n            const { title } = node.frontmatter\r\n            return (\r\n              <h6>\r\n                <b key={slug}>\r\n                  <Link to={slug} class=\"stretched-link text-secondary\">\r\n                    <i class=\"fa fa-tags fa-sm\"></i> {title}.\r\n                    <br />\r\n                  </Link>\r\n                </b>\r\n              </h6>\r\n            )\r\n          })}\r\n        </ul>\r\n        <br />\r\n        <Link to=\"/tags\" class=\"btn btn-warning btn-sm\">\r\n          <i class=\"far fa-arrow-alt-circle-left\"></i> جميع الوسوم\r\n        </Link>\r\n        <br />\r\n        <br />\r\n        <div id=\"content-mobile\">\r\n          <div class=\"p-3 mb-2 bg-success text-white\">القائمة البريدية</div>\r\n          <MailList />\r\n        </div>\r\n        <hr />\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nTags.propTypes = {\r\n  pageContext: PropTypes.shape({\r\n    tag: PropTypes.string.isRequired,\r\n  }),\r\n  data: PropTypes.shape({\r\n    allMarkdownRemark: PropTypes.shape({\r\n      totalCount: PropTypes.number.isRequired,\r\n      edges: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          node: PropTypes.shape({\r\n            frontmatter: PropTypes.shape({\r\n              title: PropTypes.string.isRequired,\r\n            }),\r\n            fields: PropTypes.shape({\r\n              slug: PropTypes.string.isRequired,\r\n            }),\r\n          }),\r\n        }).isRequired\r\n      ),\r\n    }),\r\n  }),\r\n}\r\n\r\nexport default Tags\r\n\r\nexport const pageQuery = graphql`\r\n  query($tag: String) {\r\n    allMarkdownRemark(\r\n      limit: 2000\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { frontmatter: { tags: { in: [$tag] } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport MailList from \"./maillist\"\r\nimport { Link, graphql, useStaticQuery } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\n\r\nconst Sidebar = props => {\r\n  const data = useStaticQuery(graphql`\r\n    {\r\n      allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\r\n        edges {\r\n          node {\r\n            id\r\n            fields {\r\n              slug\r\n            }\r\n            frontmatter {\r\n              tags\r\n              title\r\n              date\r\n              category\r\n              image {\r\n                childImageSharp {\r\n                  fluid(maxWidth: 250, maxHeight: 130) {\r\n                    ...GatsbyImageSharpFluid\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n  const posts = data.allMarkdownRemark.edges\r\n  return (\r\n    <div>\r\n      <div class=\"card my-4\">\r\n        <h5 class=\"card-header alert alert-secondary text-dark\" role=\"alert\">\r\n          البحث <i class=\"fas fa-search\"></i>\r\n        </h5>\r\n        <div class=\"card-body\">\r\n          <div class=\"input-group\">\r\n            <span class=\"input-group-btn\">\r\n              <button class=\"btn btn-success btn-sm\" type=\"button\">\r\n                إذهب!\r\n              </button>\r\n            </span>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control text-left form-control-sm\"\r\n              placeholder=\"... أبحن عن\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"card my-4\">\r\n        <h5 class=\"card-header alert alert-secondary text-dark\" role=\"alert\">\r\n          موضوعات قد تهمك <i class=\"fas fa-server\"></i>\r\n        </h5>\r\n        <div class=\"card-body\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n              {posts.slice(5, 7).map(post => (\r\n                <div key={post.id}>\r\n                  <Link\r\n                    to={post.node.fields.slug}\r\n                    style={{ textDecoration: \"none\" }}\r\n                  >\r\n                    <Img\r\n                      class=\"articleimg\"\r\n                      fluid={post.node.frontmatter.image.childImageSharp.fluid}\r\n                    />\r\n                    <div class=\"text-secondary\">\r\n                      <b>{post.node.frontmatter.title}</b>\r\n                    </div>\r\n                  </Link>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"card my-4\">\r\n        <h5 class=\"card-header alert alert-secondary\" role=\"alert\">\r\n          قائمتنا البريدية <i class=\"fas fa-envelope-open-text\"></i>\r\n        </h5>\r\n        <div class=\"card-body\">\r\n          <MailList />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nSidebar.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nSidebar.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\nexport default Sidebar\r\n"],"sourceRoot":""}